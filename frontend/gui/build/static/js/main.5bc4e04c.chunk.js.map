{"version":3,"sources":["components/Article.js","containers/ArticleListView.js","containers/ArticleDetailView.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","type","text","style","marginRight","Articles","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","extra","width","alt","src","Meta","avatar","href","id","description","content","ArticleList","state","articles","axios","get","then","res","setState","Article","this","React","Component","ArticleDetail","article","articleID","match","params","BaseRouter","exact","path","component","Header","Layout","Content","Footer","CustomLayout","className","theme","mode","defaultSelectedKeys","lineHeight","padding","margin","to","background","minHeight","children","textAlign","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bc4e04c.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst Articles = (props) => {\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 3,\n        }}\n        dataSource={props.data}\n        renderItem={item => (\n          <List.Item\n            key={item.title}\n            actions={[\n              <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\n              <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\n              <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\n            ]}\n            extra={\n              <img\n                width={272}\n                alt=\"logo\"\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n              />\n            }\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href={`/${item.id}`}>{item.title}</a>}\n              description={item.description}\n            />\n            {item.content}\n          </List.Item>\n        )}\n      />\n    )\n}\n\nexport default Articles;","import React from 'react';\nimport axios from 'axios';\n\nimport Articles from \"../components/Article\";\n\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        axios.get(' http://127.0.0.1:8000/api/')\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n            })\n    }\n\n    render() {\n        return (\n            <Articles data={this.state.articles} />\n        )\n    }\n}\n\nexport default ArticleList;","import React from 'react';\nimport axios from 'axios';\n\nimport { Card } from 'antd';\n\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    }\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n                });\n            })\n    }\n\n    render() {\n        return (\n            <Card title={this.state.article.title}>\n                <p>{this.state.article.content}</p>\n            </Card>\n        )\n    }\n}\n\nexport default ArticleDetail;","import React from \"react\";\nimport { Route } from 'react-router-dom';\n\nimport ArticleList from \"./containers/ArticleListView\";\nimport ArticleDetail from \"./containers/ArticleDetailView\";\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList} />\n        <Route exact path='/:articleID' component={ArticleDetail} />\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n            <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n              {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design Â©2018 Created by Ant UED</Footer>\n      </Layout>\n    );\n}\n\nexport default CustomLayout;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from \"./routes\";\nimport 'antd/dist/antd.css';\n\nimport CustomLayout from \"./containers/Layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <CustomLayout>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}