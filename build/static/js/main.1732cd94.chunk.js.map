{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","type","text","style","marginRight","Articles","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","extra","width","alt","src","Meta","avatar","href","id","description","content","CustomForm","handleFormSubmit","event","requestType","articleID","target","elements","value","axios","post","then","res","catch","error","err","put","onSubmit","label","name","placeholder","TextArea","htmlType","this","binText","React","Component","ArticleList","state","articles","get","setState","Article","ArticleDetail","article","handleDelete","match","params","delete","history","push","forceUpdate","authSuccess","token","authFail","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","preventDefault","form","validateFields","values","onAuth","username","password","errorMessage","message","getFieldDecorator","loading","indicator","className","rules","required","prefix","color","to","WrappedNormalLoginForm","Form","create","connect","expirationDate","Date","getTime","setItem","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validator","Password","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","padding","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1732cd94.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst Articles = (props) => {\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 3,\n        }}\n        dataSource={props.data}\n        renderItem={item => (\n          <List.Item\n            key={item.title}\n            actions={[\n              <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\n              <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\n              <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\n            ]}\n            extra={\n              <img\n                width={272}\n                alt=\"logo\"\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n              />\n            }\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href={`/${item.id}`}>{item.title}</a>}\n              description={item.description}\n            />\n            {item.content}\n          </List.Item>\n        )}\n      />\n    )\n}\n\nexport default Articles;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport TextArea from \"antd/es/input/TextArea\";\n\nimport axios from 'axios';\n\nclass CustomForm extends React.Component {\n    handleFormSubmit = (event, requestType, articleID) => {\n        const title = event.target.elements.title.value;\n        const content = event.target.elements.content.value;\n        \n        switch ( requestType ) {\n            case 'post':\n                return axios.post('http://127.0.0.1:8000/api/', {\n                    title: title,\n                    content: content\n                })\n                    .then(res => console.log(res))\n                    .catch(error => console.err(error));\n            case 'put':\n                return axios.put(`http://127.0.0.1:8000/api/${articleID}/`, {\n                    title: title,\n                    content: content\n                })\n                    .then(res => console.log(res))\n                    .catch(error => console.err(error));\n            default:\n                return false\n        }\n    }\n\n    // handleChange(event) {\n    //     this.setState({\n    //         [event.target.name]: event.target.value\n    //     });\n    // }\n\n    render() {\n    return (\n      <div>\n        <Form onSubmit={(event) => this.handleFormSubmit(event, this.props.requestType, this.props.articleID )}>\n          <Form.Item label=\"Title\" >\n            <Input type=\"text\" name=\"title\" placeholder=\"Put a title here\" />\n          </Form.Item>\n          <Form.Item label=\"Content\">\n            <TextArea type=\"text\" name=\"content\" placeholder=\"Enter some content ...\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">{this.props.binText}</Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default CustomForm;","import React from 'react';\nimport axios from 'axios';\n\nimport Articles from \"../components/Article\";\nimport CustomForm from \"../components/Form\";\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n        axios.get(' http://127.0.0.1:8000/api/')\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <Articles data={this.state.articles} />\n                <br/>\n                <h2>Create an article</h2>\n                <CustomForm\n                    requestType=\"post\"\n                    articleID={null}\n                    binText=\"Create\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default ArticleList;","import React from 'react';\nimport axios from 'axios';\n\nimport {Button, Card} from 'antd';\n\nimport CustomForm from \"../components/Form\";\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    }\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n                });\n            })\n    }\n\n    handleDelete = (event) => {\n        const articleID = this.props.match.params.articleID;\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}`);\n        this.props.history.push('/');\n        this.forceUpdate();\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.content}</p>\n                </Card>\n                <CustomForm\n                    requestType=\"put\"\n                    articleID={this.props.match.params.articleID}\n                    binText=\"Update\"\n                />\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ArticleDetail;","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('expirationDate');\n      return {\n          type: actionTypes.AUTH_LOGOUT\n      };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(( expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from \"react\";\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password);\n      }\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                    <Spin indicator={antIcon} />\n\n                :\n\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                rules: [{required: true, message: 'Please input your username!'}],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [{required: true, message: 'Please input your Password!'}],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                                Login\n                            </Button>\n                            Or\n                            <NavLink\n                                style={{marginRight: '10px'}}\n                                to='/signup/'> Signup\n                            </NavLink>\n                        </Form.Item>\n                    </Form>\n            }\n        </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.username,\n            values.email,\n            values.password,\n            values.confirm\n        );\n      }\n      this.props.history.push('/');\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n\n        <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{required: true, message: 'Please input your username!'}],\n            })(\n                <Input\n                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"Username\"\n                />,\n            )}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(\n              <Input\n                    prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"Email\"\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(\n              <Input.Password\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    type=\"password\"\n                    placeholder=\"Password\"\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(\n              <Input.Password\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onBlur={this.handleConfirmBlur}\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                Signup\n            </Button>\n            Or\n            <NavLink\n                style={{marginRight: '10px'}}\n                to='/login/'> Login\n            </NavLink>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);\n","import React from \"react\";\nimport { Route } from 'react-router-dom';\n\nimport ArticleList from \"./containers/ArticleListView\";\nimport ArticleDetail from \"./containers/ArticleDetailView\";\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList} />\n        <Route exact path='/articles/:articleID/' component={ArticleDetail} />\n        <Route exact path='/login/' component={Login} />\n        <Route exact path='/signup/' component={Signup} />\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nimport { connect } from \"react-redux\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render() {\n        return (\n          <Layout className=\"layout\">\n            <Header>\n              <div className=\"logo\" />\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={['2']}\n                style={{ lineHeight: '64px' }}\n              >\n\n                  {\n                      this.props.isAuthenticated ?\n                      <Menu.Item key=\"2\" onClick={this.props.logout}>\n                          Logout\n                      </Menu.Item>\n                      :\n                      <Menu.Item key=\"2\">\n                          <Link to=\"/login/\">Login</Link>\n                      </Menu.Item>\n\n                  }\n\n                <Menu.Item key=\"1\">\n                    <Link to=\"/\">Posts</Link>\n                </Menu.Item>\n\n              </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n              <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n              </Breadcrumb>\n              <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                  {this.props.children}\n              </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n          </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from \"./routes\";\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\n\nimport CustomLayout from \"./containers/Layout\";\n\nclass App extends Component{\n\n  componentDidMount() {\n      this.props.onTryAutoSignup();\n    }\n\n  render() {\n      return (\n        <div>\n            <Router>\n              <CustomLayout {...this.props}>\n                <BaseRouter />\n              </CustomLayout>\n            </Router>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer, composeEnhances(\n     applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}