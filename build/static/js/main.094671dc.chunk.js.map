{"version":3,"sources":["components/Article.js","components/Form.js","containers/ArticleListView.js","containers/ArticleDetailView.js","store/actions/auth.js","store/actions/actionTypes.js","containers/Login.js","containers/Signup.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["IconText","type","text","style","marginRight","Articles","props","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","renderItem","item","Item","key","title","actions","extra","width","alt","src","Meta","avatar","href","id","description","content","CustomForm","handleFormSubmit","event","requestType","articleID","a","preventDefault","postObj","target","elements","value","axios","defaults","xsrfHeaderName","xsrfCookieName","headers","Authorization","token","post","then","res","status","history","push","put","handleChangeTitle","setState","handleChangeContent","state","prevProps","prevState","snapshot","this","onSubmit","label","name","placeholder","TextArea","htmlType","binText","React","Component","connect","ArticleList","articles","fetchArticles","get","newProps","Article","ArticleDetail","article","handleDelete","match","params","delete","authSuccess","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","antIcon","fontSize","spin","NormalLoginForm","handleSubmit","e","form","validateFields","err","values","onAuth","username","password","errorMessage","message","getFieldDecorator","loading","indicator","className","rules","required","prefix","color","to","WrappedNormalLoginForm","Form","create","expirationDate","Date","getTime","setItem","catch","RegistrationForm","confirmDirty","validateFieldsAndScroll","email","confirm","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","validator","Password","onBlur","WrappedRegistrationForm","password1","password2","BaseRouter","exact","path","component","Login","Signup","Header","Layout","Content","Footer","CustomLayout","theme","mode","defaultSelectedKeys","lineHeight","isAuthenticated","onClick","padding","margin","background","minHeight","children","textAlign","withRouter","App","onTryAutoSignup","getItem","undefined","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uRAGMA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACf,8BACE,kBAAC,IAAD,CAAMD,KAAMA,EAAME,MAAO,CAAEC,YAAa,KACvCF,IA4CUG,EAxCE,SAACC,GACd,OACE,kBAAC,IAAD,CACEC,WAAW,WACXC,KAAK,QACLC,WAAY,CACVC,SAAU,SAAAC,GACRC,QAAQC,IAAIF,IAEdG,SAAU,GAEZC,WAAYT,EAAMU,KAClBC,WAAY,SAAAC,GAAI,OACd,kBAAC,IAAKC,KAAN,CACEC,IAAKF,EAAKG,MACVC,QAAS,CACP,kBAAC,EAAD,CAAUrB,KAAK,SAASC,KAAK,MAAMkB,IAAI,yBACvC,kBAAC,EAAD,CAAUnB,KAAK,SAASC,KAAK,MAAMkB,IAAI,yBACvC,kBAAC,EAAD,CAAUnB,KAAK,UAAUC,KAAK,IAAIkB,IAAI,2BAExCG,MACE,yBACEC,MAAO,IACPC,IAAI,OACJC,IAAI,yEAIR,kBAAC,IAAKP,KAAKQ,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQF,IAAKR,EAAKU,SAC1BP,MAAO,uBAAGQ,KAAI,oBAAeX,EAAKY,KAAOZ,EAAKG,OAC9CU,YAAab,EAAKa,cAEnBb,EAAKc,a,8DCpCZC,E,YACF,WAAY3B,GAAQ,IAAD,8BACf,4CAAMA,KASV4B,iBAVmB,uCAUA,WAAOC,EAAOC,EAAaC,GAA3B,eAAAC,EAAA,yDACfH,EAAMI,iBAEAC,EAAU,CACZnB,MAAOc,EAAMM,OAAOC,SAASrB,MAAMsB,MACnCX,QAASG,EAAMM,OAAOC,SAASV,QAAQW,OAG3CC,IAAMC,SAASC,eAAiB,cAChCF,IAAMC,SAASE,eAAiB,YAChCH,IAAMC,SAASG,QAAU,CACrB,eAAgB,mBAChBC,cAAc,SAAD,OAAW,EAAK3C,MAAM4C,QAGlB,SAAhBd,EAfU,iCAgBLQ,IAAMO,KAAK,oCAAqCX,GACjDY,MAAK,SAAAC,GACc,MAAfA,EAAIC,QACJ,EAAKhD,MAAMiD,QAAQC,KAAnB,QAnBE,kCAsBa,QAAhBpB,EAtBG,kCAuBLQ,IAAMa,IAAN,oCAAuCpB,EAAvC,YAA4DG,GAC7DY,MAAK,SAAAC,GACc,MAAfA,EAAIC,QACJ,EAAKhD,MAAMiD,QAAQC,KAAnB,QA1BE,4CAVA,4DA0CnBE,kBAAoB,SAACvB,GACjB,EAAKwB,SAAS,CAACtC,MAAOc,EAAMM,OAAOE,SA3CpB,EA6CnBiB,oBAAsB,SAACzB,GACnB,EAAKwB,SAAS,CAAC3B,QAASG,EAAMM,OAAOE,SA5CrC,EAAKkB,MAAQ,CACTxC,MAAO,EAAKf,MAAMe,MAClBW,QAAS,EAAK1B,MAAM0B,SAJT,E,gFAiDA8B,EAAWC,EAAWC,GACjCC,KAAK3D,MAAMe,OAAS4C,KAAK3D,MAAM0B,UAAciC,KAAKJ,MAAMxC,QAAU4C,KAAKJ,MAAM7B,UAC7EiC,KAAKN,SAAS,CAACtC,MAAO4C,KAAK3D,MAAMe,QACjC4C,KAAKN,SAAS,CAAC3B,QAASiC,KAAK3D,MAAM0B,a,+BAIjC,IAAD,OACL,OACE,6BACE,kBAAC,IAAD,CAAMkC,SAAU,SAAC/B,GAAD,OAAW,EAAKD,iBAAiBC,EAAO,EAAK7B,MAAM8B,YAAa,EAAK9B,MAAM+B,aACzF,kBAAC,IAAKlB,KAAN,CAAWgD,MAAM,SACf,kBAAC,IAAD,CAAOxB,MAAOsB,KAAKJ,MAAMxC,MAAOX,SAAUuD,KAAKP,kBAAmBzD,KAAK,OAAOmE,KAAK,QAAQC,YAAY,sBAEzG,kBAAC,IAAKlD,KAAN,CAAWgD,MAAM,WACf,kBAACG,EAAA,EAAD,CAAU3B,MAAOsB,KAAKJ,MAAM7B,QAAStB,SAAUuD,KAAKL,oBAAqB3D,KAAK,OAAOmE,KAAK,UAAUC,YAAY,4BAElH,kBAAC,IAAKlD,KAAN,KACE,kBAAC,IAAD,CAAQlB,KAAK,UAAUsE,SAAS,UAAUN,KAAK3D,MAAMkE,gB,GApE5CC,IAAMC,WAkFhBC,eANS,SAAAd,GACpB,MAAO,CACHX,MAAOW,EAAMX,SAINyB,CAAyB1C,GClFlC2C,E,2MAEFf,MAAQ,CACJgB,SAAU,I,EAGdC,cAAgB,WACZlC,IAAMmC,IAAI,+BACL3B,MAAK,SAAAC,GACF,EAAKM,SAAS,CACVkB,SAAUxB,EAAIrC,W,mFAM1BiD,KAAKa,kB,gDAGiBE,GAClBA,EAAS9B,OACTe,KAAKa,kB,+BAKT,OACI,6BACI,kBAACG,EAAD,CAAUjE,KAAMiD,KAAKJ,MAAMgB,WAC3B,6BACA,iDACA,kBAAC,EAAD,CACIzC,YAAY,OACZC,UAAW,KACXmC,QAAQ,gB,GAlCFC,IAAMC,WA+CjBC,eANS,SAAAd,GACpB,MAAO,CACHX,MAAOW,EAAMX,SAINyB,CAAyBC,G,SC9ClCM,E,2MAEFrB,MAAQ,CACJsB,QAAS,I,EAuBbC,aAAe,SAACjD,GACZA,EAAMI,iBACN,IAAMF,EAAY,EAAK/B,MAAM+E,MAAMC,OAAOjD,UAC1CO,IAAMC,SAASG,QAAU,CACrB,eAAgB,mBAChBC,cAAc,SAAD,OAAW,EAAK3C,MAAM4C,QAEvCN,IAAM2C,OAAN,oCAA0ClD,EAA1C,aACKe,MAAK,SAAAC,GACiB,MAAfA,EAAIC,QACJ,EAAKhD,MAAMiD,QAAQC,KAAnB,S,mFA9BK,IAAD,OACVnB,EAAY4B,KAAK3D,MAAM+E,MAAMC,OAAOjD,UAC1CO,IAAMmC,IAAN,oCAAuC1C,EAAvC,MACKe,MAAK,SAAAC,GACF,EAAKM,SAAS,CACVwB,QAAS9B,EAAIrC,Y,+BA+BzB,OACI,6BACI,kBAAC,IAAD,CAAMK,MAAO4C,KAAKJ,MAAMsB,QAAQ9D,OAC5B,2BAAI4C,KAAKJ,MAAMsB,QAAQnD,UAG3B,kBAAC,EAAD,iBACQiC,KAAK3D,MADb,CAEI4C,MAAOe,KAAK3D,MAAM4C,MAClBd,YAAY,MACZC,UAAW4B,KAAK3D,MAAM+E,MAAMC,OAAOjD,UACnCmC,QAAQ,SACRnD,MAAO4C,KAAKJ,MAAMsB,QAAQ9D,MAC1BW,QAASiC,KAAKJ,MAAMsB,QAAQnD,WAEhC,0BAAMkC,SAAUD,KAAKmB,cACjB,kBAAC,IAAD,CAAQnF,KAAK,SAASsE,SAAS,UAA/B,gB,GA1DQE,IAAMC,WAuEnBC,eANS,SAAAd,GACpB,MAAO,CACHX,MAAOW,EAAMX,SAINyB,CAAyBO,G,SCtE3BM,EAAc,SAAAtC,GACvB,MAAO,CACHjD,KCVoB,eDWpBiD,MAAOA,IAIFuC,EAAW,SAAAC,GACpB,MAAO,CACHzF,KChBiB,YDiBjByF,MAAOA,IAIFC,EAAS,WAGhB,OAFAC,aAAaC,WAAW,QACxBD,aAAaC,WAAW,kBACjB,CACH5F,KCxBiB,gBD4Bd6F,EAAmB,SAAAC,GAC5B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASL,OACO,IAAjBI,KE7BLG,EAAU,kBAAC,IAAD,CAAMjG,KAAK,UAAUE,MAAO,CAAEgG,SAAU,IAAMC,MAAI,IAG5DC,E,2MACJC,aAAe,SAAAC,GACbA,EAAEhE,iBACF,EAAKjC,MAAMkG,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACH,EAAKpG,MAAMsG,OAAOD,EAAOE,SAAUF,EAAOG,aAG9C,EAAKxG,MAAMiD,QAAQC,KAAK,M,wEAKxB,IAAIuD,EAAe,KACf9C,KAAK3D,MAAMoF,QACXqB,EACI,2BAAI9C,KAAK3D,MAAMoF,MAAMsB,UALtB,IASCC,EAAsBhD,KAAK3D,MAAMkG,KAAjCS,kBACR,OACI,6BACKF,EAEG9C,KAAK3D,MAAM4G,QAEP,kBAAC,IAAD,CAAMC,UAAWjB,IAIjB,kBAAC,IAAD,CAAMhC,SAAUD,KAAKqC,aAAcc,UAAU,cAEzC,kBAAC,IAAKjG,KAAN,KACK8F,EAAkB,WAAY,CAC3BI,MAAO,CAAC,CAACC,UAAU,EAAMN,QAAS,iCADrCC,CAGG,kBAAC,IAAD,CACIM,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCnD,YAAY,eAKxB,kBAAC,IAAKlD,KAAN,KACK8F,EAAkB,WAAY,CAC3BI,MAAO,CAAC,CAACC,UAAU,EAAMN,QAAS,iCADrCC,CAGG,kBAAC,IAAD,CACIM,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCvH,KAAK,WACLoE,YAAY,eAKxB,kBAAC,IAAKlD,KAAN,KACI,kBAAC,IAAD,CAAQlB,KAAK,UAAUsE,SAAS,SAASpE,MAAO,CAACC,YAAa,SAA9D,SADJ,KAKI,kBAAC,IAAD,CACID,MAAO,CAACC,YAAa,QACrBqH,GAAG,YAFP,kB,GA7DEhD,IAAMC,WAyE9BgD,EAAyBC,IAAKC,OAAO,CAAExD,KAAM,gBAApBuD,CAAsCtB,GAetD1B,eAbS,SAACd,GACrB,MAAO,CACHqD,QAASrD,EAAMqD,QACfxB,MAAO7B,EAAM6B,UAIM,SAAAM,GACvB,MAAO,CACHY,OAAQ,SAACC,EAAUC,GAAX,OAAwBd,EFtDf,SAACa,EAAUC,GAChC,OAAO,SAAAd,GACHA,EArCG,CACH/F,KCLkB,eD0ClB2C,IAAMO,KAAK,yCAA0C,CACjD0D,SAAUA,EACVC,SAAUA,IAET1D,MAAK,SAAAC,GACF,IAAMH,EAAQG,EAAIrC,KAAKI,IACjByG,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDnC,aAAaoC,QAAQ,QAAS9E,GAC9B0C,aAAaoC,QAAQ,iBAAkBH,GACvC7B,EAASR,EAAYtC,IACrB8C,EAASF,EAAiB,UAE7BmC,OAAM,SAAAvB,GACHV,EAASP,EAASiB,QEsCepF,CAAkBuF,EAAUC,QAI9DnC,CAA6C+C,GC1FtDQ,E,2MACJrE,MAAQ,CACNsE,cAAc,G,EAGhB7B,aAAe,SAAAC,GACbA,EAAEhE,iBACF,EAAKjC,MAAMkG,KAAK4B,yBAAwB,SAAC1B,EAAKC,GACvCD,GACH,EAAKpG,MAAMsG,OACPD,EAAOE,SACPF,EAAO0B,MACP1B,EAAOG,SACPH,EAAO2B,SAGb,EAAKhI,MAAMiD,QAAQC,KAAK,S,EAI5B+E,kBAAoB,SAAAhC,GAAM,IAChB5D,EAAU4D,EAAE9D,OAAZE,MACR,EAAKgB,SAAS,CAAEwE,aAAc,EAAKtE,MAAMsE,gBAAkBxF,K,EAG7D6F,uBAAyB,SAACC,EAAM9F,EAAO+F,GAAc,IAC3ClC,EAAS,EAAKlG,MAAdkG,KACJ7D,GAASA,IAAU6D,EAAKmC,cAAc,YACxCD,EAAS,iDAETA,K,EAIJE,uBAAyB,SAACH,EAAM9F,EAAO+F,GAAc,IAC3ClC,EAAS,EAAKlG,MAAdkG,KACJ7D,GAAS,EAAKkB,MAAMsE,cACtB3B,EAAKC,eAAe,CAAC,WAAY,CAAEoC,OAAO,IAE5CH,K,wEAGQ,IACAzB,EAAsBhD,KAAK3D,MAAMkG,KAAjCS,kBAER,OACE,kBAAC,IAAD,CAAM/C,SAAUD,KAAKqC,cAEnB,kBAAC,IAAKnF,KAAN,KACK8F,EAAkB,WAAY,CAC3BI,MAAO,CAAC,CAACC,UAAU,EAAMN,QAAS,iCADrCC,CAGG,kBAAC,IAAD,CACIM,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCnD,YAAY,eAKxB,kBAAC,IAAKlD,KAAN,KACG8F,EAAkB,QAAS,CAC1BI,MAAO,CACL,CACEpH,KAAM,QACN+G,QAAS,kCAEX,CACEM,UAAU,EACVN,QAAS,+BARdC,CAYG,kBAAC,IAAD,CACMM,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCnD,YAAY,YAIxB,kBAAC,IAAKlD,KAAN,KACG8F,EAAkB,WAAY,CAC7BI,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,+BAEX,CACE8B,UAAW7E,KAAK2E,0BAPrB3B,CAWG,kBAAC,IAAM8B,SAAP,CACMxB,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCvH,KAAK,WACLoE,YAAY,eAIxB,kBAAC,IAAKlD,KAAN,KACG8F,EAAkB,UAAW,CAC5BI,MAAO,CACL,CACEC,UAAU,EACVN,QAAS,iCAEX,CACE8B,UAAW7E,KAAKuE,0BAPrBvB,CAWG,kBAAC,IAAM8B,SAAP,CACMxB,OAAQ,kBAAC,IAAD,CAAMtH,KAAK,OAAOE,MAAO,CAACqH,MAAO,qBACzCvH,KAAK,WACLoE,YAAY,WACZ2E,OAAQ/E,KAAKsE,sBAIzB,kBAAC,IAAKpH,KAAN,KACI,kBAAC,IAAD,CAAQlB,KAAK,UAAUsE,SAAS,SAASpE,MAAO,CAACC,YAAa,SAA9D,UADJ,KAKI,kBAAC,IAAD,CACID,MAAO,CAACC,YAAa,QACrBqH,GAAG,WAFP,gB,GA1HmBhD,IAAMC,WAoI/BuE,EAA0BtB,IAAKC,QAALD,CAAcO,GAe/BvD,eAbS,SAACd,GACrB,MAAO,CACHqD,QAASrD,EAAMqD,QACfxB,MAAO7B,EAAM6B,UAIM,SAAAM,GACvB,MAAO,CACHY,OAAQ,SAACC,EAAUwB,EAAOa,EAAWC,GAA7B,OAA2CnD,EH1FjC,SAACa,EAAUwB,EAAOa,EAAWC,GACnD,OAAO,SAAAnD,GACHA,EA1DG,CACH/F,KCLkB,eD+DlB2C,IAAMO,KAAK,gDAAiD,CACxD0D,SAAUA,EACVwB,MAAOA,EACPa,UAAWA,EACXC,UAAWA,IAEV/F,MAAK,SAAAC,GACF,IAAMH,EAAQG,EAAIrC,KAAKI,IACjByG,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDnC,aAAaoC,QAAQ,QAAS9E,GAC9B0C,aAAaoC,QAAQ,iBAAkBH,GACvC7B,EAASR,EAAYtC,IACrB8C,EAASF,EAAiB,UAE7BmC,OAAM,SAAAvB,GACHV,EAASP,EAASiB,QGwEkCpF,CAAmBuF,EAAUwB,EAAOa,EAAWC,QAIpGxE,CAA6CsE,GCzI7CG,EATI,kBACf,6BACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3E,IACjC,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,wBAAwBC,UAAWrE,IACrD,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,UAAUC,UAAWC,IACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWE,M,oCCPxCC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,GAAWF,IAAXE,OAEnBC,G,iLAEE,OACE,kBAAC,IAAD,CAAQ1C,UAAU,UAChB,kBAACsC,EAAD,KACE,yBAAKtC,UAAU,SACf,kBAAC,IAAD,CACE2C,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtB9J,MAAO,CAAE+J,WAAY,SAIfjG,KAAK3D,MAAM6J,gBACX,kBAAC,IAAKhJ,KAAN,CAAWC,IAAI,IAAIgJ,QAASnG,KAAK3D,MAAMqF,QAAvC,UAIA,kBAAC,IAAKxE,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMqG,GAAG,WAAT,UAKV,kBAAC,IAAKtG,KAAN,CAAWC,IAAI,KACX,kBAAC,IAAD,CAAMqG,GAAG,KAAT,YAKR,kBAACmC,EAAD,CAASzJ,MAAO,CAAEkK,QAAS,WACzB,kBAAC,IAAD,CAAYlK,MAAO,CAAEmK,OAAQ,WAC3B,kBAAC,IAAWnJ,KAAZ,KAAiB,kBAAC,IAAD,CAAMsG,GAAG,KAAT,SACjB,kBAAC,IAAWtG,KAAZ,KAAiB,kBAAC,IAAD,CAAMsG,GAAG,KAAT,UAEnB,yBAAKtH,MAAO,CAAEoK,WAAY,OAAQF,QAAS,GAAIG,UAAW,MACrDvG,KAAK3D,MAAMmK,WAGlB,kBAACZ,GAAD,CAAQ1J,MAAO,CAAEuK,UAAW,WAA5B,+C,GAxCejG,IAAMC,WAoDlBiG,eAAWhG,YAAQ,MANP,SAAAqB,GACvB,MAAO,CACHL,OAAQ,kBAAMK,EAAS1E,SAILqD,CAAkCmF,KCnDtDc,G,4LAGA3G,KAAK3D,MAAMuK,oB,+BAIX,OACE,6BACI,kBAAC,IAAD,KACE,kBAAC,GAAiB5G,KAAK3D,MACrB,kBAAC,EAAD,a,GAXEoE,aA+BHC,gBAZS,SAAAd,GACpB,MAAO,CACHsG,gBAAiC,OAAhBtG,EAAMX,UAIJ,SAAA8C,GACvB,MAAO,CACH6E,gBAAiB,kBAAM7E,GNgDpB,SAAAA,GACH,IAAM9C,EAAQ0C,aAAakF,QAAQ,SACnC,QAAcC,IAAV7H,EACA8C,EAASL,SACN,CACH,IAAMkC,EAAiB,IAAIC,KAAKlC,aAAakF,QAAQ,mBAChDjD,GAAkB,IAAIC,KACvB9B,EAASL,MAETK,EAASR,EAAYtC,IACrB8C,EAASF,GAAmB+B,EAAeE,WAAY,IAAID,MAAOC,WAAa,eMtDhFpD,CAA6CiG,IC5BxCI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9F,MACvB,2D,gQClBC,IAAM+F,GAAe,SAACC,EAAWC,GACpC,O,4VAAO,CAAP,GACOD,EADP,GAEOC,ICALC,GAAe,CACjBrI,MAAO,KACPwC,MAAO,KACPwB,SAAS,GAGPsE,GAAY,SAAC3H,EAAO4H,GACtB,OAAOL,GAAavH,EAAO,CACvB6B,MAAO,KACPwB,SAAS,KAIX1B,GAAc,SAAC3B,EAAO4H,GACxB,OAAOL,GAAavH,EAAO,CACvBX,MAAOuI,EAAOvI,MACdwC,MAAO,KACPwB,SAAS,KAIXzB,GAAW,SAAC5B,EAAO4H,GACrB,OAAOL,GAAavH,EAAO,CACvB6B,MAAO+F,EAAO/F,MACdwB,SAAS,KAIXwE,GAAa,SAAC7H,EAAO4H,GACvB,OAAOL,GAAavH,EAAO,CACvBX,MAAO,QAeAyI,GAXC,WAAiC,IAAhC9H,EAA+B,uDAAzB0H,GAAcE,EAAW,uCAC5C,OAAQA,EAAOxL,MACX,IRvCkB,aQuCW,OAAOuL,GAAU3H,GAC9C,IRvCoB,eQuCW,OAAO2B,GAAY3B,EAAO4H,GACzD,IRvCiB,YQuCW,OAAOhG,GAAS5B,EAAO4H,GACnD,IRvCmB,cQuCW,OAAOC,GAAW7H,GAChD,QACI,OAAOA,IClCb+H,GAAkBX,OAAOY,sCAAwCC,KACjEC,GAAQC,aAAYL,GAASC,GAC9BK,aAAgBC,QAGfC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,OAIRK,IAASC,OAAOF,GAAKG,SAASC,eAAe,SH4GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtJ,MAAK,SAAAuJ,GACjCA,EAAaC,kB","file":"static/js/main.094671dc.chunk.js","sourcesContent":["import React from 'react';\nimport { List, Avatar, Icon } from 'antd';\n\nconst IconText = ({ type, text }) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n);\n\nconst Articles = (props) => {\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        pagination={{\n          onChange: page => {\n            console.log(page);\n          },\n          pageSize: 3,\n        }}\n        dataSource={props.data}\n        renderItem={item => (\n          <List.Item\n            key={item.title}\n            actions={[\n              <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\n              <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\n              <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\n            ]}\n            extra={\n              <img\n                width={272}\n                alt=\"logo\"\n                src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\"\n              />\n            }\n          >\n            <List.Item.Meta\n              avatar={<Avatar src={item.avatar} />}\n              title={<a href={`/articles/${item.id}`}>{item.title}</a>}\n              description={item.description}\n            />\n            {item.content}\n          </List.Item>\n        )}\n      />\n    )\n}\n\nexport default Articles;","import React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport TextArea from \"antd/es/input/TextArea\";\n\nimport axios from 'axios';\nimport {connect} from \"react-redux\";\n\nclass CustomForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.title,\n            content: this.props.content\n        }\n    }\n\n\n\n    handleFormSubmit = async (event, requestType, articleID) => {\n        event.preventDefault();\n\n        const postObj = {\n            title: event.target.elements.title.value,\n            content: event.target.elements.content.value\n        }\n\n        axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n        axios.defaults.xsrfCookieName = \"csrftoken\";\n        axios.defaults.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.token}`,\n        };\n        \n        if ( requestType === \"post\" ) {\n            await axios.post(\"http://127.0.0.1:8000/api/create/\", postObj)\n                .then(res => {\n                 if (res.status === 201) {\n                     this.props.history.push(`/`);\n                 }\n                })\n        } else if ( requestType === \"put\" ) {\n            await axios.put(`http://127.0.0.1:8000/api/${articleID}/update/`, postObj)\n                .then(res => {\n                 if (res.status === 200) {\n                     this.props.history.push(`/`);\n                 }\n                })\n        }\n    };\n\n    handleChangeTitle = (event) =>  {\n        this.setState({title: event.target.value});\n    }\n    handleChangeContent = (event) => {\n        this.setState({content: event.target.value});\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if((this.props.title && this.props.content) && (!this.state.title && !this.state.content)){\n            this.setState({title: this.props.title});\n            this.setState({content: this.props.content});\n        }\n    }\n\n    render() {\n        return (\n          <div>\n            <Form onSubmit={(event) => this.handleFormSubmit(event, this.props.requestType, this.props.articleID )}>\n              <Form.Item label=\"Title\" >\n                <Input value={this.state.title} onChange={this.handleChangeTitle} type=\"text\" name=\"title\" placeholder=\"Put a title here\" />\n              </Form.Item>\n              <Form.Item label=\"Content\">\n                <TextArea value={this.state.content} onChange={this.handleChangeContent} type=\"text\" name=\"content\" placeholder=\"Enter some content ...\" />\n              </Form.Item>\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">{this.props.binText}</Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token,\n    }\n}\n\nexport default connect(mapStateToProps)(CustomForm);","import React from 'react';\nimport axios from 'axios';\nimport {connect} from 'react-redux';\n\nimport Articles from \"../components/Article\";\nimport CustomForm from \"../components/Form\";\n\nclass ArticleList extends React.Component {\n\n    state = {\n        articles: []\n    };\n\n    fetchArticles = () => {\n        axios.get(' http://127.0.0.1:8000/api/')\n            .then(res => {\n                this.setState({\n                    articles: res.data\n                });\n            });\n    }\n\n    componentDidMount() {\n        this.fetchArticles();\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (newProps.token) {\n            this.fetchArticles();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Articles data={this.state.articles} />\n                <br/>\n                <h2>Create an article</h2>\n                <CustomForm\n                    requestType=\"post\"\n                    articleID={null}\n                    binText=\"Create\"\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n     }\n}\n\nexport default connect(mapStateToProps)(ArticleList);","import React from 'react';\nimport axios from 'axios';\n\nimport {Button, Card} from 'antd';\n\nimport CustomForm from \"../components/Form\";\nimport {connect} from \"react-redux\";\n\nclass ArticleDetail extends React.Component {\n\n    state = {\n        article: {}\n    };\n\n    componentDidMount() {\n        const articleID = this.props.match.params.articleID;\n        axios.get(`http://127.0.0.1:8000/api/${articleID}/`)\n            .then(res => {\n                this.setState({\n                    article: res.data\n                });\n            });\n    }\n\n    // componentWillReceiveProps(newProps) {\n    //     if (newProps.token) {\n    //         axios.defaults.headers = {\n    //             \"Content-Type\": \"application/json\",\n    //             Authorization: newProps.token\n    //         }\n    //\n    //     }\n    // }\n\n    handleDelete = (event) => {\n        event.preventDefault();\n        const articleID = this.props.match.params.articleID;\n        axios.defaults.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Token ${this.props.token}`\n        };\n        axios.delete(`http://127.0.0.1:8000/api/${articleID}/delete/`)\n            .then(res => {\n                if (res.status === 204) {\n                    this.props.history.push(`/`);\n                }\n            })\n    };\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.content}</p>\n                </Card>\n\n                <CustomForm\n                    {...this.props}\n                    token={this.props.token}\n                    requestType=\"put\"\n                    articleID={this.props.match.params.articleID}\n                    binText=\"Update\"\n                    title={this.state.article.title}\n                    content={this.state.article.content}\n                />\n                <form onSubmit={this.handleDelete}>\n                    <Button type=\"danger\" htmlType=\"submit\">Delete</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token\n    }\n}\n\nexport default connect(mapStateToProps)(ArticleDetail);","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n      localStorage.removeItem('user');\n      localStorage.removeItem('expirationDate');\n      return {\n          type: actionTypes.AUTH_LOGOUT\n      };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n            .then(res => {\n                const token = res.data.key;\n                const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n                localStorage.setItem('token', token);\n                localStorage.setItem('expirationDate', expirationDate);\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(3600));\n            })\n            .catch(err => {\n                dispatch(authFail(err))\n            })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout(( expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from \"react\";\nimport { Form, Icon, Input, Button, Spin } from 'antd';\nimport { connect } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport * as actions from '../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password);\n      }\n    });\n    this.props.history.push('/');\n  };\n\n  render() {\n\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage = (\n            <p>{this.props.error.message}</p>\n        );\n    }\n\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            {\n                this.props.loading ?\n\n                    <Spin indicator={antIcon} />\n\n                :\n\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\n\n                        <Form.Item>\n                            {getFieldDecorator('username', {\n                                rules: [{required: true, message: 'Please input your username!'}],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [{required: true, message: 'Please input your Password!'}],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </Form.Item>\n\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                                Login\n                            </Button>\n                            Or\n                            <NavLink\n                                style={{marginRight: '10px'}}\n                                to='/signup/'> Signup\n                            </NavLink>\n                        </Form.Item>\n                    </Form>\n            }\n        </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { Form, Input, Icon, Button } from 'antd';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../store/actions/auth\";\n\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        this.props.onAuth(\n            values.username,\n            values.email,\n            values.password,\n            values.confirm\n        );\n      }\n      this.props.history.push('/');\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n\n        <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{required: true, message: 'Please input your username!'}],\n            })(\n                <Input\n                    prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"Username\"\n                />,\n            )}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ],\n          })(\n              <Input\n                    prefix={<Icon type=\"mail\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    placeholder=\"Email\"\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(\n              <Input.Password\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    type=\"password\"\n                    placeholder=\"Password\"\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(\n              <Input.Password\n                    prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    onBlur={this.handleConfirmBlur}\n              />)}\n        </Form.Item>\n\n        <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>\n                Signup\n            </Button>\n            Or\n            <NavLink\n                style={{marginRight: '10px'}}\n                to='/login/'> Login\n            </NavLink>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);\n","import React from \"react\";\nimport { Route } from 'react-router-dom';\n\nimport ArticleList from \"./containers/ArticleListView\";\nimport ArticleDetail from \"./containers/ArticleDetailView\";\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/' component={ArticleList} />\n        <Route exact path='/articles/:articleID/' component={ArticleDetail} />\n        <Route exact path='/login/' component={Login} />\n        <Route exact path='/signup/' component={Signup} />\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as actions from \"../store/actions/auth\";\nimport { connect } from \"react-redux\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass CustomLayout extends React.Component {\n    render() {\n        return (\n          <Layout className=\"layout\">\n            <Header>\n              <div className=\"logo\" />\n              <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={['2']}\n                style={{ lineHeight: '64px' }}\n              >\n\n                  {\n                      this.props.isAuthenticated ?\n                      <Menu.Item key=\"2\" onClick={this.props.logout}>\n                          Logout\n                      </Menu.Item>\n                      :\n                      <Menu.Item key=\"2\">\n                          <Link to=\"/login/\">Login</Link>\n                      </Menu.Item>\n\n                  }\n\n                <Menu.Item key=\"1\">\n                    <Link to=\"/\">Posts</Link>\n                </Menu.Item>\n\n              </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px' }}>\n              <Breadcrumb style={{ margin: '16px 0' }}>\n                <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n              </Breadcrumb>\n              <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                  {this.props.children}\n              </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n          </Layout>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default withRouter(connect(null, mapDispatchToProps)(CustomLayout));\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from \"./routes\";\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\n\nimport CustomLayout from \"./containers/Layout\";\n\nclass App extends Component{\n\n  componentDidMount() {\n      this.props.onTryAutoSignup();\n    }\n\n  render() {\n      return (\n        <div>\n            <Router>\n              <CustomLayout {...this.props}>\n                <BaseRouter />\n              </CustomLayout>\n            </Router>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryAutoSignup: () => dispatch(actions.authCheckState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers/auth\";\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer, composeEnhances(\n     applyMiddleware(thunk)\n))\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}